{"version":3,"sources":["components/Searchar/Searchbar.js","components/Loader/Loader.js","services/galleryApi.js","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Searchbar","state","searchQuery","onSubmit","e","preventDefault","props","setState","onChange","target","value","this","className","type","autoComplete","autoFocus","placeholder","Component","Loader","key","fetchImagesByQuery","query","page","axios","get","then","result","data","hits","Modal","children","onClose","onClick","ImageGalleryItem","modal","onElementClick","onCloseClick","smallImg","bigImg","src","alt","ImageGallery","images","map","image","webformatURL","largeImageURL","id","Button","App","search","loading","error","fetchImages","res","prevState","catch","finally","buttonOnClick","prevProps","window","scrollTo","top","document","documentElement","scrollHeight","behavior","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.694c76cd.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class Searchbar extends Component {\n  state={\n    searchQuery: '',\n  }\n  onSubmit=(e)=>{\n    e.preventDefault()\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({\n      searchQuery: \"\",\n    })\n  }\n  onChange=(e)=>{\n    this.setState({\n      searchQuery: e.target.value,\n    })\n    }\n  render(){\n    const {searchQuery}=this.state;\n  return (\n    <header className=\"Searchbar\">\n  <form onSubmit={this.onSubmit} className=\"SearchForm\">\n    <button type=\"submit\" className=\"SearchForm-button\">\n      <span className=\"SearchForm-button-label\">Search</span>\n    </button>\n\n    <input\n      className=\"SearchForm-input\"\n      type=\"text\"\n      autoComplete=\"off\"\n      autoFocus\n      placeholder=\"Search images and photos\"\n      value={searchQuery}\n      onChange={this.onChange}\n    />\n  </form>\n</header>\n  );\n  }\n}","import Spinner from 'react-loader-spinner';\r\n\r\nexport default function Loader(){\r\n    return <Spinner className=\"loader\" type=\"Puff\"/>\r\n}","import axios from 'axios';\n\nconst key = '17360188-9b16833f6c352b97c5c5d2e23';\n\nexport function fetchImagesByQuery(query, page = 1) {\n  return axios\n    .get(\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\n    )\n    .then((result) => result.data.hits);\n}\n","import PropTypes from 'prop-types'\r\n\r\n\r\nfunction Modal({children, onClose}){\r\n    return(\r\n        <div className=\"Overlay\" onClick={onClose}>\r\n            <div className=\"Modal\">\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nModal.propTypes={\r\n    children: PropTypes.node.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal;","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport Modal from '../Modal/Modal'\r\n\r\nclass ImageGalleryItem extends Component{\r\n    state={\r\n        modal: false,\r\n    }\r\n    onElementClick=(e)=>{\r\n        this.setState({\r\n            modal: true,\r\n        })\r\n    }\r\n    onCloseClick=(e)=>{\r\n        this.setState({\r\n            modal: false,\r\n        })\r\n    }\r\n    render(){\r\n        const {smallImg, bigImg} = this.props;\r\n        const {modal} = this.state;\r\n    return(\r\n        <li className=\"ImageGalleryItem\">\r\n            <img src={smallImg} alt=\"\"  onClick={this.onElementClick} className=\"ImageGalleryItem-image\" />\r\n            {modal&&<Modal onClose={this.onCloseClick}>\r\n                <img src={bigImg} alt=\"\" />\r\n            </Modal>}\r\n        </li>\r\n    )\r\n    }\r\n}\r\n\r\nImageGalleryItem.propTypes={\r\n    smallImg: PropTypes.string.isRequired,\r\n    bigImg: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default ImageGalleryItem;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from './ImageGalleryItem'\r\n\r\n\r\nclass ImageGallery extends Component {\r\n    render(){\r\n        const {images}=this.props;\r\n        return (\r\n            <ul className=\"ImageGallery\">\r\n                {images.map((image)=>(\r\n                    <>\r\n                    <ImageGalleryItem\r\n                        key={image.id}\r\n                        smallImg={image.webformatURL}\r\n                        bigImg={image.largeImageURL}\r\n                    />\r\n\r\n                    </>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nImageGallery.propTypes={\r\n    images: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default ImageGallery;","import PropTypes from 'prop-types';\r\n\r\nfunction Button({onClick}){\r\n    return(\r\n        <button type=\"button\" className=\"Button\" onClick={onClick}>\r\n            Load more\r\n        </button>\r\n    )\r\n}\r\n\r\nButton.propTypes={\r\n    onClick: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Button;","import React, { Component } from 'react';\nimport './App.css';\nimport Searchbar from '../Searchar/Searchbar';\nimport Loader from '../Loader/Loader';\nimport { fetchImagesByQuery } from '../../services/galleryApi';\nimport ImageGallery from '../ImageGallery/ImageGallery';\nimport Button from '../Button/Button';\n\nexport default class App extends Component {\n  state = {\n    search: '',\n    images: [],\n    loading: false,\n    error: null,\n    page: 1,\n  };\n  fetchImages = () => {\n    this.setState({\n      loading: true,\n      error: null,\n    });\n    fetchImagesByQuery(this.state.search, this.state.page)\n      .then(res =>\n        this.setState(prevState => {\n          return {\n            images: [...prevState.images, ...res],\n            page: prevState.page + 1,\n          };\n        }),\n      )\n      .catch(error => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n  onSubmit = value => {\n    this.setState(\n      {\n        search: value,\n        page: 1,\n        images: [],\n      },\n      this.fetchImages,\n    );\n  };\n  buttonOnClick = () => {\n    this.fetchImages();\n  };\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.images !== this.state.images) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }\n  componentDidMount(prevProps, prevState) {\n    this.setState({\n      page: 1,\n    })\n    this.fetchImages();\n  }\n  render() {\n    const { images, loading } = this.state;\n    return (\n      <div className=\"container\">\n        <Searchbar onSubmit={this.onSubmit} />\n        {loading && <Loader />}\n        <ImageGallery images={images} />\n        {!loading && <Button onClick={this.buttonOnClick} />}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}